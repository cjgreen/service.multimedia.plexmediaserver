BASE_URL = 'http://www.medici.tv'

MediaObject.container     = 'mp4'
MediaObject.video_codec   = 'h264'
MediaObject.audio_codec   = 'aac'

####################################################################################################
def NormalizeURL(url):

  return url

####################################################################################################
def MetadataObjectForURL(url):

  data = GetJSON(url)
  title = data['nom']
  summary = ''

  if 'subtitle' in data['infos']:
    summary = String.StripTags(data['infos']['subtitle'])

  try:
    for chapter in data['chapters']:
      if chapter['description']:
        summary += '\n' + chapter['description']
  except:
    pass

  thumb = data['url_thumbnail']

  return VideoClipObject(
    title=title,
    summary=summary,
    thumb=thumb
  )

####################################################################################################
def MediaObjectsForURL(url):

  return [
    MediaObject(
      parts = [PartObject(key=Callback(PlayVideo, url=url, res='3'))],
      video_resolution = '720'
    ),
    MediaObject(
      parts = [PartObject(key=Callback(PlayVideo, url=url, res='2'))],
      video_resolution = '480'
    ),
    MediaObject(
      parts = [PartObject(key=Callback(PlayVideo, url=url, res='1'))],
      video_resolution = '288'
    )
  ]

####################################################################################################
def PlayVideo(url, res='3'):

  data = GetJSON(url)

  if not 'url_daily' in data:
    raise Ex.MediaNotAvailable

  video_url = data['url_daily'][res].replace('&rtmp=1','')

  return Redirect(video_url)

####################################################################################################
def GetJSON(url):

  data = HTML.ElementFromURL(url)
  CSRFToken = data.xpath('//input[@name="csrfmiddlewaretoken"]')[0].get('value')
  headers = {'X-CSRFToken':CSRFToken}
  page = url.split('/#!')[1]
  post_data = {'json':'true','page':page}
  content = HTTP.Request(BASE_URL, headers=headers, values=post_data).content

  details = JSON.ObjectFromString(content)

  if 'video' not in details or 'videos' not in details['video'] or 'video1' not in details['video']['videos']:
    raise Ex.MediaNotAvailable

  return details['video']['videos']['video1']

####################################################################################################
def TestURLs():

  test_urls = []
  data = HTML.ElementFromURL('http://www.medici.tv/#!/new')

  for url in data.xpath('//div[@id="header_live_box"]//a/@href'):
    if "/#!/live/" not in url and url.startswith('http://') and url not in test_urls:
      test_urls.append(url)

    if len(test_urls) > 2:
      break

  return test_urls
