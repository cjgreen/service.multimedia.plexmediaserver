RE_YT_URL = Regex('tv\.play\("([^"]+)"')

####################################################################################################
def MetadataObjectForURL(url):

	data = HTTP.Request(url).content
	yt_url = RE_YT_URL.search(data)

	if yt_url:
		return URLService.MetadataObjectForURL(yt_url.group(1).replace('\u003D', '='))

	raise Ex.MediaNotAvailable

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			video_resolution = '1080',
			optimized_for_streaming = True,
			audio_channels = 2,
			parts = [PartObject(key=Callback(PlayVideo, url=url, res=1080))]
		),
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			video_resolution = '720',
			optimized_for_streaming = True,
			audio_channels = 2,
			parts = [PartObject(key=Callback(PlayVideo, url=url, res=720))]
		),
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			video_resolution = '480',
			optimized_for_streaming = True,
			audio_channels = 2,
			parts = [PartObject(key=Callback(PlayVideo, url=url, res=480))]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url, res=1080):

	data = HTTP.Request(url).content
	yt_url = RE_YT_URL.search(data)

	if not yt_url:
		raise Ex.MediaNotAvailable

	media = URLService.MediaObjectsForURL(yt_url.group(1).replace('\u003D', '='))

	resolutions = [1080, 720, 480]
	index = resolutions.index(res)

	for resolution_index in range(index, len(resolutions)):
		current_resolution = resolutions[resolution_index]

		for video in media:
			if video.container != Container.MP4 or video.video_codec != VideoCodec.H264:
				continue

			if video.video_resolution == current_resolution:
				return Redirect(video.parts[0].key)

	return Redirect(media[-1].parts[0].key)
